.chat_wrapper
  = turbo_stream_from "chat_rooms"
  #chat_rooms
    .chat_list
      .chat_list__title
        = t(:my_chats, scope: 'chats')
      hr
      = render 'chat_rooms/chat_rooms', chat_rooms: @chat_rooms, user: current_user
  .chat_block
    = turbo_frame_tag "chat_block_content"
      - if @chat_room && !@chat_room.destroyed?
        style
          | .message_#{current_user.id} {
          |   display: flex;
          |   justify-content: flex-end;
          | }
          | .message_#{current_user.id} .message_content {
          |   background-color: #DDD5F3;
          | }
        #chat_room.chat_block_header
          .chat_block_header__title
            = @chat_room.topic
          .chat_inline
            .chat_block_header__user_name
              = @chat_room.target_person(current_user).username
            .chat_block_header__action
              = button_to 'Delete', chat_room_path(@chat_room), method: :delete, class: 'default_button', data: { turbo: false, confirm: "Are you sure?" }
        = turbo_stream_from @chat_room
        #messages.chat_block_communication data-controller="scroll"
          = render @messages
        hr
        .chat_block_actions
          = form_with(model: [@chat_room, @message], remote: true,  data: { controller: "form-reset", action: "turbo:submit-end->form-reset#reset" }) do |form|
            = form.text_field :body, placeholder: "Type a message...", class: 'chat_input', data: { form_reset_target: "input", action: "input->form-reset#toggleSubmitButton" }
            = form.submit "Send", class: 'default_button', data: { form_reset_target: "submit", disable_with: false }
      - else
        .chat_room__unselected
          | No chatroom selected.
